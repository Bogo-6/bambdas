/**
 * Bambda Script to Highlight Responses with Developer Notes
 * This script identifies and highlights HTTP responses containing developer notes in HTML, JavaScript, or other files.
 * It differentiates the types of files and highlights them accordingly: green for HTML, yellow for JavaScript, and blue for other types.
 * @author Tur24Tur / BugBountyzip (https://github.com/BugBountyzip)
 **/

boolean manualColorHighlightEnabled = true;

// Ensure there is a response and it is not null
if (!requestResponse.hasResponse() || requestResponse.response() == null) {
    return false;
}

// Use mimeType() for content type detection
MimeType responseType = requestResponse.response().mimeType();
boolean isHtml = responseType == MimeType.HTML;
boolean isJavaScript = responseType == MimeType.SCRIPT;
boolean foundDeveloperNotes = false;
StringBuilder notesBuilder = new StringBuilder();
HighlightColor highlightColor = HighlightColor.BLUE; // Default color for other types

if (isHtml) {
    highlightColor = HighlightColor.GREEN;
} else if (isJavaScript) {
    highlightColor = HighlightColor.YELLOW;
}

String responseBody = requestResponse.response().bodyToString();
String[] commentPatterns = {"<!--(.*?)-->", "/[*][*](.*?)[*][*]/"};

for (String pattern : commentPatterns) {
    Pattern regexPattern = Pattern.compile(pattern, Pattern.DOTALL);
    Matcher matcher = regexPattern.matcher(responseBody);

    while (matcher.find()) {
        foundDeveloperNotes = true;
        if (manualColorHighlightEnabled) {
            String note = matcher.group();
            // Limit the note length to 250 characters to avoid excessively long notes
            if (note.length() > 250) {
                note = note.substring(0, 250) + "...";
            }

            if (notesBuilder.length() > 0) {
                notesBuilder.append("; ");
            }
            notesBuilder.append("Developer note found: ").append(note);
        }
    }
}

if (foundDeveloperNotes) {
    requestResponse.annotations().setHighlightColor(highlightColor);
    if (manualColorHighlightEnabled && notesBuilder.length() > 0) {
        requestResponse.annotations().setNotes(notesBuilder.toString());
    }
}

return foundDeveloperNotes;

